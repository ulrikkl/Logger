version: '3.1'
services:
    flask_app:
        container_name: flask_app
        restart: unless-stopped
        build:
                context: .
                dockerfile: Dockerfile-Flask
        depends_on:
                - db
        environment:
                - FLASK_APP=logger.py
                - FLASK_RUN_HOST=0.0.0.0
                - DATABASE:URL=mysql+pymysql://logger:user123@dbserver/logger
        networks:
                flask_network:
                        aliases:
                                - flask-network
        command: bash -c 'gunicorn --bind 0.0.0.0:8000 --access-logfile - --error-logfile - --workers 4 logger:app'
    nginx:
        image: nginx
        container_name: flask_nginx
        restart: unless-stopped
        volumes:
                - ./deployment/nginx/default.conf:/etc/nginx/conf.d/default.conf
        ports:
                - 80:80
                - 443:443
        depends_on:
                - flask_app
        networks:
                - flask_network
    db:
        image: mysql:5.7
        restart: unless-stopped
        container_name: flask_db
        ports:
                - "3307:3306"
        expose:
                - "3307"
        environment:
                - MYSQL_USER=logger
                - MYSQL_PASSWORD=user123
                - MYSQL_DATABASE=logger
                - MYSQL_ROOT_PASSWORD=12345678
        volumes:
                - flask_volume:/var/lib/mysql
        networks:
                - flask_network
volumes:
        flask_volume:
networks:
        flask_network: